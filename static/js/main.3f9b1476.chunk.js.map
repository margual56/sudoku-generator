{"version":3,"sources":["components/Toggle.js","components/NumberInput.js","components/Sudoku.js","App.js","components/Footer.js","index.js"],"names":["Toggle","props","toggleActive","setState","active","state","toggleCallback","onToggle","className","this","type","onChange","checked","Component","NumberInput","text","checkInput","e","correction","isCorrect","hasCorrect","classList","indexOf","hasWrong","splice","push","forceUpdate","split","join","onBlur","onKeyPress","window","isNaN","key","preventDefault","console","log","onClick","target","value","maxLength","cols","rows","Sudoku","mat","matIncomplete","N","K","SRN","maxIterations","reload","tmp","Array","i","j","Math","sqrt","floor","random","solve","clone","unSolveK","shuffle","array","randomIndex","currentIndex","length","nextEmptySpot","checkRow","row","checkColumn","column","checkSquare","boxRow","boxCol","r","c","checkValue","randNum","count","emptySpot","col","forEach","num","matrix","m","randX","randY","toggleComplete","showSolution","val","Number","realTimeCorrection","map","item","entry","element","realtime","btnText","showComplete","isActive","items","isArray","App","Footer","href","title","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f9b1476.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nimport '../styles/toggle.scss';\nimport '../styles/toggle-text.scss';\n\nclass Toggle extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactive: props.active || false,\n\t\t\ttoggleCallback: props.onToggle || null\n\t\t};\n\t}\n\n\ttoggleActive = () => {\n\t\tthis.setState({active: !this.state.active}, () => {this.state.toggleCallback(this.state.active);});\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"toggle\">\n\t\t\t\t<p>Real-time correction: {this.state.active?\"Enabled\":\"Disabled\"}</p>\n\n\t\t\t\t<label className=\"switch\">\n\t\t\t\t\t<input type=\"checkbox\" onChange={this.toggleActive} checked={this.state.active}></input>\n\t\t\t\t\t<span className=\"slider round\"></span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Toggle;","import { Component } from \"react\";\n\nclass NumberInput extends Component {\n\ttext = \"\";\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcorrection: props.correction || null,\n\t\t\tclassList: (props.className || \"\").split(' ')\n\t\t}\n\t}\n\n\tcheckInput = (e) => {\n\t\tif(this.state.correction === null)\n\t\t\treturn;\n\n\t\tlet isCorrect = this.state.correction(e);\n\t\t\n\t\tlet hasCorrect = this.state.classList.indexOf(\"correct\");\n\t\tlet hasWrong = this.state.classList.indexOf(\"wrong\");\n \n\t\tif(this.text === ''){\n\t\t\tif(hasCorrect !== -1)\n\t\t\t\tthis.state.classList.splice(hasCorrect, 1);\n\n\t\t\tif(hasWrong !== -1)\n\t\t\t\tthis.state.classList.splice(hasWrong, 1);\n\t\t}else {\n\t\t\tif(isCorrect){\n\t\t\t\tif(hasCorrect === -1)\n\t\t\t\t\tthis.state.classList.push(\"correct\");\n\n\t\t\t\tif(hasWrong !== -1)\n\t\t\t\t\tthis.state.classList.splice(hasWrong, 1);\n\t\t\t}else{\n\t\t\t\tif(hasWrong === -1)\n\t\t\t\t\tthis.state.classList.push(\"wrong\");\n\n\t\t\t\tif(hasCorrect !== -1)\n\t\t\t\t\tthis.state.classList.splice(hasCorrect, 1);\n\t\t\t}\n\t\t}\n\n\t\tthis.forceUpdate();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<textarea \n\t\t\t\tclassName={this.state.classList.join(\" \")}\n\t\t\t\tonBlur={(e) => this.checkInput(e)}\n\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\tif(window.isNaN(e.key) || e.key === ' ')\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.text = e.key;\n\n\t\t\t\t\tconsole.log(this.text);\n\t\t\t\t}}\n\t\t\t\tonClick={e => {e.target.value=\"\"; this.text = \"\";}}\n\t\t\t\tmaxLength={1} \n\t\t\t\tcols={1} \n\t\t\t\trows={1}\n\t\t\t>\n\t\t\t</textarea>\n\t\t);\n\t}\n}\n\nexport default NumberInput;","import { Component } from 'react';\n\nimport Toggle from './Toggle';\nimport NumberInput from './NumberInput';\n\nimport '../styles/sudoku.scss';\n\nclass Sudoku extends Component {\n\tmat = null;\n\tmatIncomplete = null;\n\tN = 9; // number of columns/rows.\n\tK = 35; // No. Of missing digits\n\tSRN = -1; // square root of N\n\tmaxIterations = 9999;\n\n    // Constructor\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tshowSolution: props.showSolution || false,\n\t\t\trealTimeCorrection: false\n\t\t}\n\n\t\tlet tmp = Array(this.N);\n\t\tfor(let i = 0; i<this.N; i++){\n\t\t\ttmp[i] = Array(this.N);\n\n\t\t\tfor(let j = 0; j<this.N; j++){\n\t\t\t\ttmp[i][j] = 0;\n\t\t\t}\n\t\t}\n\n        // Compute square root of N\n        this.SRN = Math.sqrt(this.N);\n\t\tthis.mat = tmp;\n\n\t\t//window.requestIdleCallback(() => this.map = this.solve(this.mat));\n\t\tfor(let i = 0; i<3; i++)\n\t\t\tthis.mat[Math.floor(Math.random()*9)][Math.floor(Math.random()*9)] = 1+Math.floor(Math.random()*9);\n\t\t\n\t\tthis.mat = this.solve(this.mat, 0);\n\t\tthis.matIncomplete = clone(this.mat);\n\n\t\tthis.matIncomplete = this.unSolveK(this.matIncomplete, this.K);\n    }\n\n\treload = () => {\n\t\tlet tmp = Array(this.N);\n\t\tfor(let i = 0; i<this.N; i++){\n\t\t\ttmp[i] = Array(this.N);\n\n\t\t\tfor(let j = 0; j<this.N; j++){\n\t\t\t\ttmp[i][j] = 0;\n\t\t\t}\n\t\t}\n\n        // Compute square root of N\n        this.SRN = Math.sqrt(this.N);\n\t\tthis.mat = tmp;\n\n\t\t//window.requestIdleCallback(() => this.map = this.solve(this.mat));\n\t\tfor(let i = 0; i<3; i++)\n\t\t\tthis.mat[Math.floor(Math.random()*9)][Math.floor(Math.random()*9)] = 1+Math.floor(Math.random()*9);\n\t\t\n\t\tthis.mat = this.solve(this.mat, 0);\n\n\t\tthis.matIncomplete = clone(this.mat);\n\t\tthis.matIncomplete = this.unSolveK(this.matIncomplete, this.K);\n\t}\n \n\tshuffle = (array) => {\n\t\tvar currentIndex = array.length,  randomIndex;\n\t  \n\t\t// While there remain elements to shuffle...\n\t\twhile (currentIndex !== 0) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex--;\n\t\t\n\t\t\t// And swap it with the current element.\n\t\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\tarray[randomIndex], array[currentIndex]];\n\t\t}\n\t  \n\t\treturn array;\n\t}\n\n\tnextEmptySpot = (mat) => {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\tif (mat[i][j] === 0) \n\t\t\t\t\treturn [i, j];\n\t\t\t}\n\t\t}\n\n\t\treturn [-1, -1];\n\t}\n\n    checkRow = (mat, row, value) => {\n\t\tfor(let i = 0; i < mat[row].length; i++) {\n\t\t\tif(mat[row][i] === value) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t   \n\t\treturn true;\n\t}\n\n\tcheckColumn = (mat, column, value) => {\n\t\tfor(let i = 0; i < mat.length; i++) {\n\t\t\tif(mat[i][column] === value) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\treturn true;\n\t}\n\n\tcheckSquare = (mat, row, column, value) => {\n\t\tlet boxRow = Math.floor(row / 3) * 3;\n\t\tlet boxCol = Math.floor(column / 3) * 3;\n\t\t\n\t\tfor (var r = 0; r < 3; r++){\n\t\t\tfor (var c = 0; c < 3; c++){\n\t\t\t\tif (mat[boxRow + r][boxCol + c] === value)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcheckValue = (mat, row, column, value) => {\n\t\tif(this.checkRow(mat, row, value) &&\n\t\t\tthis.checkColumn(mat, column, value) &&\n\t\t\tthis.checkSquare(mat, row, column, value)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false; \n\t}\n\n\trandNum = () => {\n\t\treturn Math.floor(Math.random()*this.N)+1;\n\t}\n\n\tsolve = (mat, count) => {\n\t\tif(count >= this.maxIterations)\n\t\t\treturn null;\n\n\t\tlet emptySpot = this.nextEmptySpot(mat);\n\t\tlet row = emptySpot[0];\n\t\tlet col = emptySpot[1];\n\t\t\n\t\t// there is no more empty spots\n\t\tif (row === -1){\n\t\t\treturn mat;\n\t\t}\n\n\t\tlet nums = this.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\t\tnums.forEach(num => {\n\t\t\tif(this.checkValue(mat, row, col, num)){\n\t\t\t\tmat[row][col] = num;\n\t\t\t\tthis.solve(mat, count+1);\n\t\t\t}\n\t\t});\n\n\t\tif (this.nextEmptySpot(mat)[0] !== -1)\n\t\t\tmat[row][col] = 0;\n\t\n\t\treturn mat;\n\t}\n\n\tunSolveK = (matrix, K) => {\n\t\tlet m = [...matrix];\n\t\tfor(let i = 0; i<K; i++){\n\t\t\tlet randX, randY;\n\n\t\t\tdo{\n\t\t\t\trandX = Math.floor(Math.random()*this.N);\n\t\t\t\trandY = Math.floor(Math.random()*this.N);\n\t\t\t}while(m[randX][randY] === -1);\n\n\t\t\tm[randX][randY] = -1;\n\t\t}\n\n\t\treturn m;\n\t}\n\n\ttoggleComplete = () => {\n\t\tthis.setState({showSolution: !this.state.showSolution});\n\t}\n\n\tcheckInput = (i, j, e) => {\n\t\tlet val = Number(e.target.value);\n\t\tlet isCorrect = this.mat[i][j] === val;\n\t\t//let empty = \"\" === e.target.value;\n\n\t\treturn isCorrect;\n\t}\n\n\trender(){\n\t\tlet rows;\n\t\t\n\t\tif(this.state.showSolution){\n\t\t\trows = this.mat.map((item, i) => {\n\t\t\t\tlet entry = item.map((element, j) => {\n\t\t\t\t\treturn ( \n\t\t\t\t\t\t<td key={j}>{element}</td>\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={i}>{entry}</tr>\n\t\t\t\t);\n\t\t\t});\n\t\t}else{\n\t\t\trows = this.matIncomplete.map((item, i) => {\n\t\t\t\tlet entry = item.map((element, j) => {\n\t\t\t\t\tif(element !== -1){\n\t\t\t\t\t\treturn ( \n\t\t\t\t\t\t\t<td key={j}>{element}</td>\n\t\t\t\t\t\t);\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<td className={\"empty\" + (this.state.realTimeCorrection?\" realtime\":\"\")} key={j}>\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\trealtime={this.state.realTimeCorrection}\n\t\t\t\t\t\t\t\t\tcorrection={e => {return this.checkInput(i, j, e)}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn (\n\t\t\t\t\t<tr key={i}>{entry}</tr>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tlet btnText = this.showComplete?\"Hide solution\":\"Show solution\";\n\n\t\treturn (\n\t\t\t<div className=\"sudoku-container\">\n\t\t\t\t<table className=\"sudoku\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{rows}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<button onClick={()=>{\n\t\t\t\t\t\t\tthis.reload(); \n\t\t\t\t\t\t\tthis.forceUpdate(); \n\t\t\t\t\t\t\tconsole.log(\"reloading\");\n\t\t\t\t\t\t}}>Refresh</button>\n\n\t\t\t\t\t<div className=\"spacer\"></div>\n\n\t\t\t\t\t<button onClick={()=>{\n\t\t\t\t\t\t\tthis.toggleComplete();\n\t\t\t\t\t\t\tconsole.log(!this.state.showSolution?\"Showing solution\":\"Hiding solution\");\n\t\t\t\t\t\t}}>{btnText}</button>\n\n\t\t\t\t\t<Toggle onToggle={(isActive) => {this.setState({realTimeCorrection: isActive})}}/>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst clone = (items) => items.map(item => Array.isArray(item) ? clone(item) : item);\n\nexport default Sudoku;","import Sudoku from './components/Sudoku';\n\nimport './styles/main.scss';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Sudoku/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import '../styles/footer.scss';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>\n\t\t\t\tThis is an <a href=\"https://opensource.org/docs/osd\" title=\"What is Open Source?\" target=\"_blank\" rel=\"noreferrer\">Open Source</a> project\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tCheck out <a href=\"https://github.com/margual56/sudoku-generator\" title=\"Repository of this project\" target=\"_blank\" rel=\"noreferrer\">the code</a>\n\t\t\t</p>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Footer from './components/Footer';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t\t<Footer/>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}