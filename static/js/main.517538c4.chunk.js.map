{"version":3,"sources":["Sudoku.js","App.js","index.js"],"names":["Sudoku","props","mat","N","K","SRN","tmp","Array","i","j","Math","sqrt","floor","random","solve","array","randomIndex","currentIndex","length","row","value","column","boxRow","boxCol","r","c","this","checkRow","checkColumn","checkSquare","emptySpot","nextEmptySpot","col","shuffle","forEach","num","checkValue","rows","map","item","entry","element","className","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.517538c4.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport './styles/sudoku.scss';\n\nclass Sudoku extends Component {\n\tmat = null;\n\tN = 9; // number of columns/rows.\n\tK = 10; // No. Of missing digits\n\tSRN = -1; // square root of N\n\n    // Constructor\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tlet tmp = Array(this.N);\n\t\tfor(let i = 0; i<this.N; i++){\n\t\t\ttmp[i] = Array(this.N);\n\n\t\t\tfor(let j = 0; j<this.N; j++){\n\t\t\t\ttmp[i][j] = 0;\n\t\t\t}\n\t\t}\n\n        // Compute square root of N\n        this.SRN = Math.sqrt(this.N);\n\t\tthis.mat = tmp;\n\n\t\t//window.requestIdleCallback(() => this.map = this.solve(this.mat));\n\t\tfor(let i = 0; i<3; i++)\n\t\t\tthis.mat[Math.floor(Math.random()*9)][Math.floor(Math.random()*9)] = 1+Math.floor(Math.random()*9);\n\t\t\n\t\tthis.mat = this.solve(this.mat);\n    }\n \n\tshuffle(array) {\n\t\tvar currentIndex = array.length,  randomIndex;\n\t  \n\t\t// While there remain elements to shuffle...\n\t\twhile (currentIndex !== 0) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex--;\n\t\t\n\t\t\t// And swap it with the current element.\n\t\t\t[array[currentIndex], array[randomIndex]] = [\n\t\t\tarray[randomIndex], array[currentIndex]];\n\t\t}\n\t  \n\t\treturn array;\n\t}\n\n\tnextEmptySpot(mat) {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\tif (mat[i][j] === 0) \n\t\t\t\t\treturn [i, j];\n\t\t\t}\n\t\t}\n\n\t\treturn [-1, -1];\n\t}\n\n    checkRow(mat, row, value){\n\t\tfor(let i = 0; i < mat[row].length; i++) {\n\t\t\tif(mat[row][i] === value) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t   \n\t\treturn true;\n\t}\n\n\tcheckColumn(mat, column, value){\n\t\tfor(let i = 0; i < mat.length; i++) {\n\t\t\tif(mat[i][column] === value) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\treturn true;\n\t}\n\n\tcheckSquare(mat, row, column, value){\n\t\tlet boxRow = Math.floor(row / 3) * 3;\n\t\tlet boxCol = Math.floor(column / 3) * 3;\n\t\t\n\t\tfor (var r = 0; r < 3; r++){\n\t\t\tfor (var c = 0; c < 3; c++){\n\t\t\t\tif (mat[boxRow + r][boxCol + c] === value)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcheckValue(mat, row, column, value) {\n\t\tif(this.checkRow(mat, row, value) &&\n\t\t\tthis.checkColumn(mat, column, value) &&\n\t\t\tthis.checkSquare(mat, row, column, value)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false; \n\t}\n\n\trandNum(){\n\t\treturn Math.floor(Math.random()*this.N)+1;\n\t}\n\n\tsolve(mat) {\n\t\tlet emptySpot = this.nextEmptySpot(mat);\n\t\tlet row = emptySpot[0];\n\t\tlet col = emptySpot[1];\n\t\t\n\t\t// there is no more empty spots\n\t\tif (row === -1){\n\t\t\treturn mat;\n\t\t}\n\n\t\tlet nums = this.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\t\tnums.forEach(num => {\n\t\t\tif(this.checkValue(mat, row, col, num)){\n\t\t\t\tmat[row][col] = num;\n\t\t\t\tthis.solve(mat);\n\t\t\t}\n\t\t});\n\n\t\tif (this.nextEmptySpot(mat)[0] !== -1)\n\t\t\tmat[row][col] = 0;\n\t\n\t\treturn mat;\n\t}\n\n\trender(){\n\t\tlet rows = this.mat.map((item, i) => {\n            let entry = item.map((element, j) => {\n                return ( \n                    <td key={j}>{element}</td>\n                );\n            });\n            return (\n                <tr key={i}>{entry}</tr>\n             );\n        });\n\n\t\treturn (\n\t\t\t<table className=\"sudoku\">\n\t\t\t\t<tbody>\n\t\t\t\t{rows}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n}\nexport default Sudoku;","import Sudoku from './Sudoku';\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t\n\t\t\t\t<Sudoku/>\n\t\t\t\t\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}